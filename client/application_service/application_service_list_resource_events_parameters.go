// Code generated by go-swagger; DO NOT EDIT.

package application_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewApplicationServiceListResourceEventsParams creates a new ApplicationServiceListResourceEventsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewApplicationServiceListResourceEventsParams() *ApplicationServiceListResourceEventsParams {
	return &ApplicationServiceListResourceEventsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewApplicationServiceListResourceEventsParamsWithTimeout creates a new ApplicationServiceListResourceEventsParams object
// with the ability to set a timeout on a request.
func NewApplicationServiceListResourceEventsParamsWithTimeout(timeout time.Duration) *ApplicationServiceListResourceEventsParams {
	return &ApplicationServiceListResourceEventsParams{
		timeout: timeout,
	}
}

// NewApplicationServiceListResourceEventsParamsWithContext creates a new ApplicationServiceListResourceEventsParams object
// with the ability to set a context for a request.
func NewApplicationServiceListResourceEventsParamsWithContext(ctx context.Context) *ApplicationServiceListResourceEventsParams {
	return &ApplicationServiceListResourceEventsParams{
		Context: ctx,
	}
}

// NewApplicationServiceListResourceEventsParamsWithHTTPClient creates a new ApplicationServiceListResourceEventsParams object
// with the ability to set a custom HTTPClient for a request.
func NewApplicationServiceListResourceEventsParamsWithHTTPClient(client *http.Client) *ApplicationServiceListResourceEventsParams {
	return &ApplicationServiceListResourceEventsParams{
		HTTPClient: client,
	}
}

/* ApplicationServiceListResourceEventsParams contains all the parameters to send to the API endpoint
   for the application service list resource events operation.

   Typically these are written to a http.Request.
*/
type ApplicationServiceListResourceEventsParams struct {

	// Name.
	Name string

	// ResourceName.
	ResourceName *string

	// ResourceNamespace.
	ResourceNamespace *string

	// ResourceUID.
	ResourceUID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the application service list resource events params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ApplicationServiceListResourceEventsParams) WithDefaults() *ApplicationServiceListResourceEventsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the application service list resource events params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ApplicationServiceListResourceEventsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) WithTimeout(timeout time.Duration) *ApplicationServiceListResourceEventsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) WithContext(ctx context.Context) *ApplicationServiceListResourceEventsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) WithHTTPClient(client *http.Client) *ApplicationServiceListResourceEventsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) WithName(name string) *ApplicationServiceListResourceEventsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) SetName(name string) {
	o.Name = name
}

// WithResourceName adds the resourceName to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) WithResourceName(resourceName *string) *ApplicationServiceListResourceEventsParams {
	o.SetResourceName(resourceName)
	return o
}

// SetResourceName adds the resourceName to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) SetResourceName(resourceName *string) {
	o.ResourceName = resourceName
}

// WithResourceNamespace adds the resourceNamespace to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) WithResourceNamespace(resourceNamespace *string) *ApplicationServiceListResourceEventsParams {
	o.SetResourceNamespace(resourceNamespace)
	return o
}

// SetResourceNamespace adds the resourceNamespace to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) SetResourceNamespace(resourceNamespace *string) {
	o.ResourceNamespace = resourceNamespace
}

// WithResourceUID adds the resourceUID to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) WithResourceUID(resourceUID *string) *ApplicationServiceListResourceEventsParams {
	o.SetResourceUID(resourceUID)
	return o
}

// SetResourceUID adds the resourceUid to the application service list resource events params
func (o *ApplicationServiceListResourceEventsParams) SetResourceUID(resourceUID *string) {
	o.ResourceUID = resourceUID
}

// WriteToRequest writes these params to a swagger request
func (o *ApplicationServiceListResourceEventsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if o.ResourceName != nil {

		// query param resourceName
		var qrResourceName string

		if o.ResourceName != nil {
			qrResourceName = *o.ResourceName
		}
		qResourceName := qrResourceName
		if qResourceName != "" {

			if err := r.SetQueryParam("resourceName", qResourceName); err != nil {
				return err
			}
		}
	}

	if o.ResourceNamespace != nil {

		// query param resourceNamespace
		var qrResourceNamespace string

		if o.ResourceNamespace != nil {
			qrResourceNamespace = *o.ResourceNamespace
		}
		qResourceNamespace := qrResourceNamespace
		if qResourceNamespace != "" {

			if err := r.SetQueryParam("resourceNamespace", qResourceNamespace); err != nil {
				return err
			}
		}
	}

	if o.ResourceUID != nil {

		// query param resourceUID
		var qrResourceUID string

		if o.ResourceUID != nil {
			qrResourceUID = *o.ResourceUID
		}
		qResourceUID := qrResourceUID
		if qResourceUID != "" {

			if err := r.SetQueryParam("resourceUID", qResourceUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
