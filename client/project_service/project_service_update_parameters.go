// Code generated by go-swagger; DO NOT EDIT.

package project_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/wanddynosios/go-argocd-client/models"
)

// NewProjectServiceUpdateParams creates a new ProjectServiceUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewProjectServiceUpdateParams() *ProjectServiceUpdateParams {
	return &ProjectServiceUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewProjectServiceUpdateParamsWithTimeout creates a new ProjectServiceUpdateParams object
// with the ability to set a timeout on a request.
func NewProjectServiceUpdateParamsWithTimeout(timeout time.Duration) *ProjectServiceUpdateParams {
	return &ProjectServiceUpdateParams{
		timeout: timeout,
	}
}

// NewProjectServiceUpdateParamsWithContext creates a new ProjectServiceUpdateParams object
// with the ability to set a context for a request.
func NewProjectServiceUpdateParamsWithContext(ctx context.Context) *ProjectServiceUpdateParams {
	return &ProjectServiceUpdateParams{
		Context: ctx,
	}
}

// NewProjectServiceUpdateParamsWithHTTPClient creates a new ProjectServiceUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewProjectServiceUpdateParamsWithHTTPClient(client *http.Client) *ProjectServiceUpdateParams {
	return &ProjectServiceUpdateParams{
		HTTPClient: client,
	}
}

/* ProjectServiceUpdateParams contains all the parameters to send to the API endpoint
   for the project service update operation.

   Typically these are written to a http.Request.
*/
type ProjectServiceUpdateParams struct {

	// Body.
	Body *models.ProjectProjectUpdateRequest

	/* ProjectMetadataName.

	     Name must be unique within a namespace. Is required when creating resources, although
	some resources may allow a client to request the generation of an appropriate name
	automatically. Name is primarily intended for creation idempotence and configuration
	definition.
	Cannot be updated.
	More info: http://kubernetes.io/docs/user-guide/identifiers#names
	+optional
	*/
	ProjectMetadataName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the project service update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ProjectServiceUpdateParams) WithDefaults() *ProjectServiceUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the project service update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ProjectServiceUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the project service update params
func (o *ProjectServiceUpdateParams) WithTimeout(timeout time.Duration) *ProjectServiceUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the project service update params
func (o *ProjectServiceUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the project service update params
func (o *ProjectServiceUpdateParams) WithContext(ctx context.Context) *ProjectServiceUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the project service update params
func (o *ProjectServiceUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the project service update params
func (o *ProjectServiceUpdateParams) WithHTTPClient(client *http.Client) *ProjectServiceUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the project service update params
func (o *ProjectServiceUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the project service update params
func (o *ProjectServiceUpdateParams) WithBody(body *models.ProjectProjectUpdateRequest) *ProjectServiceUpdateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the project service update params
func (o *ProjectServiceUpdateParams) SetBody(body *models.ProjectProjectUpdateRequest) {
	o.Body = body
}

// WithProjectMetadataName adds the projectMetadataName to the project service update params
func (o *ProjectServiceUpdateParams) WithProjectMetadataName(projectMetadataName string) *ProjectServiceUpdateParams {
	o.SetProjectMetadataName(projectMetadataName)
	return o
}

// SetProjectMetadataName adds the projectMetadataName to the project service update params
func (o *ProjectServiceUpdateParams) SetProjectMetadataName(projectMetadataName string) {
	o.ProjectMetadataName = projectMetadataName
}

// WriteToRequest writes these params to a swagger request
func (o *ProjectServiceUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param project.metadata.name
	if err := r.SetPathParam("project.metadata.name", o.ProjectMetadataName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
