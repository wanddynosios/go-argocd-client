// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1alpha1ApplicationDestination ApplicationDestination holds information about the application's destination
//
// swagger:model v1alpha1ApplicationDestination
type V1alpha1ApplicationDestination struct {

	// Name is an alternate way of specifying the target cluster by its symbolic name
	Name string `json:"name,omitempty"`

	// Namespace specifies the target namespace for the application's resources.
	// The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
	Namespace string `json:"namespace,omitempty"`

	// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
	Server string `json:"server,omitempty"`
}

// Validate validates this v1alpha1 application destination
func (m *V1alpha1ApplicationDestination) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1alpha1 application destination based on context it is used
func (m *V1alpha1ApplicationDestination) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1alpha1ApplicationDestination) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1alpha1ApplicationDestination) UnmarshalBinary(b []byte) error {
	var res V1alpha1ApplicationDestination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
