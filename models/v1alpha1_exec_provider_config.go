// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1alpha1ExecProviderConfig ExecProviderConfig is config used to call an external command to perform cluster authentication
// See: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig
//
// swagger:model v1alpha1ExecProviderConfig
type V1alpha1ExecProviderConfig struct {

	// Preferred input version of the ExecInfo
	APIVersion string `json:"apiVersion,omitempty"`

	// Arguments to pass to the command when executing it
	Args []string `json:"args"`

	// Command to execute
	Command string `json:"command,omitempty"`

	// Env defines additional environment variables to expose to the process
	Env map[string]string `json:"env,omitempty"`

	// This text is shown to the user when the executable doesn't seem to be present
	InstallHint string `json:"installHint,omitempty"`
}

// Validate validates this v1alpha1 exec provider config
func (m *V1alpha1ExecProviderConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1alpha1 exec provider config based on context it is used
func (m *V1alpha1ExecProviderConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1alpha1ExecProviderConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1alpha1ExecProviderConfig) UnmarshalBinary(b []byte) error {
	var res V1alpha1ExecProviderConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
