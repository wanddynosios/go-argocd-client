// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1alpha1ResourceResult ResourceResult holds the operation result details of a specific resource
//
// swagger:model v1alpha1ResourceResult
type V1alpha1ResourceResult struct {

	// Group specifies the API group of the resource
	Group string `json:"group,omitempty"`

	// HookPhase contains the state of any operation associated with this resource OR hook
	// This can also contain values for non-hook resources.
	HookPhase string `json:"hookPhase,omitempty"`

	// HookType specifies the type of the hook. Empty for non-hook resources
	HookType string `json:"hookType,omitempty"`

	// Kind specifies the API kind of the resource
	Kind string `json:"kind,omitempty"`

	// Message contains an informational or error message for the last sync OR operation
	Message string `json:"message,omitempty"`

	// Name specifies the name of the resource
	Name string `json:"name,omitempty"`

	// Namespace specifies the target namespace of the resource
	Namespace string `json:"namespace,omitempty"`

	// Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
	Status string `json:"status,omitempty"`

	// SyncPhase indicates the particular phase of the sync that this result was acquired in
	SyncPhase string `json:"syncPhase,omitempty"`

	// Version specifies the API version of the resource
	Version string `json:"version,omitempty"`
}

// Validate validates this v1alpha1 resource result
func (m *V1alpha1ResourceResult) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1alpha1 resource result based on context it is used
func (m *V1alpha1ResourceResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1alpha1ResourceResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1alpha1ResourceResult) UnmarshalBinary(b []byte) error {
	var res V1alpha1ResourceResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
