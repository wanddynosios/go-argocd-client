// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VersionVersionMessage VersionMessage represents version of the Argo CD API server
//
// swagger:model versionVersionMessage
type VersionVersionMessage struct {

	// build date
	BuildDate string `json:"BuildDate,omitempty"`

	// compiler
	Compiler string `json:"Compiler,omitempty"`

	// git commit
	GitCommit string `json:"GitCommit,omitempty"`

	// git tag
	GitTag string `json:"GitTag,omitempty"`

	// git tree state
	GitTreeState string `json:"GitTreeState,omitempty"`

	// go version
	GoVersion string `json:"GoVersion,omitempty"`

	// helm version
	HelmVersion string `json:"HelmVersion,omitempty"`

	// jsonnet version
	JsonnetVersion string `json:"JsonnetVersion,omitempty"`

	// kubectl version
	KubectlVersion string `json:"KubectlVersion,omitempty"`

	// kustomize version
	KustomizeVersion string `json:"KustomizeVersion,omitempty"`

	// platform
	Platform string `json:"Platform,omitempty"`

	// version
	Version string `json:"Version,omitempty"`
}

// Validate validates this version version message
func (m *VersionVersionMessage) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this version version message based on context it is used
func (m *VersionVersionMessage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VersionVersionMessage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VersionVersionMessage) UnmarshalBinary(b []byte) error {
	var res VersionVersionMessage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
